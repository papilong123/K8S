
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 20480; # 指定 worker 子进程可以打开的最大文件句柄数，可以理解成每个worker子进程的最大连接数量。

# 指定 worker 子进程异常终止后的 core 文件，用于记录分析问题。
worker_rlimit_core 50M; # 存放大小限制
working_directory /var/log/nginx; # 存放目录（和日志存在一起）

# worker_cpu_affinity 0001 0010 0100 1000; # 将每个 worker 子进程与我们的 cpu 物理核心绑定。4个物理核心，4个worker子进程

# 指定 worker 子进程的 nice 值，以调整运行 Nginx 的优先级，通常设定为负值，以优先调用 Nginx 。
# Linux 默认进程的优先级值是120，值越小越优先；nice 定范围为 -20 到 +19 。
# 【备注】应用的默认优先级值是120加上 nice 值等于它最终的值，这个值越小，优先级越高。
worker_priority -10; # 120-10=110，110就是最终的优先级

# 指定 worker 子进程优雅退出时的超时时间。
worker_shutdown_timeout 5s;        # worker 子进程内部使用的计时器精度，调整时间间隔越大，系统调用越少，有利于性能提升；反之，系统调用越多，性能下降。
timer_resolution        100ms;     # 在 Linux 系统中，用户需要获取计时器时需要向操作系统内核发送请求，有请求就必然会有开销，因此这个间隔越大开销就越小。

# daemon off; # 默认是on，后台运行模式，指定 Nginx 的运行方式，前台还是后台，前台用于调试，后台用于生产。

events {
    # use epoll;    # 使用何种事件驱动模型，不推荐配置它，让nginx自己选择，method 可选值为：select、poll、kqueue、epoll、/dev/poll、eventport
    worker_connections  1024;   # worker 子进程能够处理的最大并发连接数。
    accept_mutex on; # 是否打开负载均衡互斥锁，默认是off关闭的，这里推荐打开
}


http {
    include       /etc/nginx/mime.types;    # 文件扩展名与类型映射表
    default_type  application/octet-stream;     # 默认文件类型

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;   # 开启高效传输模式
    tcp_nopush     on;    # 减少网络报文段的数量
    tcp_nodelay    on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
